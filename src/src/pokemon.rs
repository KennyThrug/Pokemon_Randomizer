use std::fs;
//An... Exhastive list of every single pokemon
use Type::*;
use num_enum::TryFromPrimitive;
use std::convert::TryFrom;
use LegendStatus::*;
use csv::{self, Reader};
use try_catch::catch;

#[derive(Copy, Clone)]
#[derive(TryFromPrimitive)]
#[derive(PartialEq)]
#[repr(i32)]
pub enum Pokemon{
Bulbasaur,
Ivysaur,
Venusaur,
VenusaurMega,
Charmander,
Charmeleon,
Charizard,
CharizardMegaX,
CharizardMegaY,
Squirtle,
Wartortle,
Blastoise,
BlastoiseMega,
Caterpie,
Metapod,
Butterfree,
Weedle,
Kakuna,
Beedrill,
BeedrillMega,
Pidgey,
Pidgeotto,
Pidgeot,
PidgeotMega,
Rattata,
RattataAlolan,
Raticate,
RaticateAlolan,
Spearow,
Fearow,
Ekans,
Arbok,
Pikachu,
Raichu,
RaichuAlolan,
Sandshrew,
SandshrewAlolan,
Sandslash,
SandslashAlolan,
NidoranF,
Nidorina,
Nidoqueen,
NidoranM,
Nidorino,
Nidoking,
Clefairy,
Clefable,
Vulpix,
VulpixAlolan,
Ninetales,
NinetalesAlolan,
Jigglypuff,
Wigglytuff,
Zubat,
Golbat,
Oddish,
Gloom,
Vileplume,
Paras,
Parasect,
Venonat,
Venomoth,
Diglett,
DiglettAlolan,
Dugtrio,
DugtrioAlolan,
Meowth,
MeowthAlolan,
MeowthGalarian,
Persian,
PersianAlolan,
Psyduck,
Golduck,
Mankey,
Primeape,
Growlithe,
GrowlitheHisuian,
Arcanine,
ArcanineHisuian,
Poliwag,
Poliwhirl,
Poliwrath,
Abra,
Kadabra,
Alakazam,
AlakazamMega,
Machop,
Machoke,
Machamp,
Bellsprout,
Weepinbell,
Victreebel,
Tentacool,
Tentacruel,
Geodude,
GeodudeAlolan,
Graveler,
GravelerAlolan,
Golem,
GolemAlolan,
Ponyta,
PonytaGalarian,
Rapidash,
RapidashGalarian,
Slowpoke,
SlowpokeGalarian,
Slowbro,
SlowbroGalarian,
SlowbroMega,
Magnemite,
Magneton,
Farfetchd,
FarfetchdGalarian,
Doduo,
Dodrio,
Seel,
Dewgong,
Grimer,
GrimerAlolan,
Muk,
MukAlolan,
Shellder,
Cloyster,
Gastly,
Haunter,
Gengar,
GengarMega,
Onix,
Drowzee,
Hypno,
Krabby,
Kingler,
Voltorb,
VoltorbHisuian,
Electrode,
ElectrodeHisuian,
Exeggcute,
Exeggutor,
ExeggutorAlolan,
Cubone,
Marowak,
MarowakAlolan,
Hitmonlee,
Hitmonchan,
Lickitung,
Koffing,
Weezing,
WeezingGalarian,
Rhyhorn,
Rhydon,
Chansey,
Tangela,
Kangaskhan,
KangaskhanMega,
Horsea,
Seadra,
Goldeen,
Seaking,
Staryu,
Starmie,
MrMime,
MrMimeGalarian,
Scyther,
Jynx,
Electabuzz,
Magmar,
Pinsir,
PinsirMega,
Tauros,
TaurosPaldeanCombatBreed,
TaurosPaldeanBlazeBreed,
TaurosPaldeanAquaBreed,
Magikarp,
Gyarados,
GyaradosMega,
Lapras,
Ditto,
Eevee,
Vaporeon,
Jolteon,
Flareon,
Porygon,
Omanyte,
Omastar,
Kabuto,
Kabutops,
Aerodactyl,
AerodactylMega,
Snorlax,
Articuno,
ArticunoGalarian,
Zapdos,
ZapdosGalarian,
Moltres,
MoltresGalarian,
Dratini,
Dragonair,
Dragonite,
MewTwo,
MewTwoMegaX,
MewTwoMegaY,
Mew,
Chikorita,
Bayleef,
Meganium,
Cyndaquil,
Quilava,
Typhlosion,
TyphlosionHisuian,
Totodile,
Croconaw,
Feraligatr,
Sentret,
Furret,
Hoothoot,
Noctowl,
Ledyba,
Ledian,
Spinarak,
Ariados,
Crobat,
Chinchou,
Lanturn,
Pichu,
Cleffa,
Igglybuff,
Togepi,
Togetic,
Natu,
Xatu,
Mareep,
Flaaffy,
Ampharos,
AmpharosMega,
Bellossom,
Marill,
Azumarill,
Sudowoodo,
Politoed,
Hoppip,
Skiploom,
Jumpluff,
Aipom,
Sunkern,
Sunflora,
Yanma,
Wooper,
WooperPaldean,
Quagsire,
Espeon,
Umbreon,
Murkrow,
Slowking,
SlowkingGalarian,
Misdreavus,
Unown,
Wobbuffet,
Girafarig,
Pineco,
Forretress,
Dunsparce,
Gligar,
Steelix,
SteelixMega,
Snubbull,
Granbull,
Qwilfish,
QuilfishHisuian,
Scizor,
ScizorMega,
Shuckle,
Heracross,
HeracrossMega,
Sneasel,
SneaselHisuian,
Teddiursa,
Ursaring,
Slugma,
Magcargo,
Swinub,
Piloswine,
Corsola,
CorsolaGalarian,
Remoraid,
Octillery,
Delibird,
Mantine,
Skarmory,
Houndour,
Houndoom,
HoundoomMega,
Kingdra,
Phanpy,
Donphan,
Porygon2,
Stantler,
Smeargle,
Tyrogue,
Hitmontop,
Smoochum,
Elekid,
Magby,
Miltank,
Blissey,
Raikou,
Entei,
Suicune,
Larvitar,
Pupitar,
Tyranitar,
TyranitarMega,
Lugia,
Hooh,
Celebi,
Treecko,
Grovyle,
Sceptile,
SceptileMega,
Torchic,
Combusken,
Blaziken,
BlazikenMega,
Mudkip,
Marshtomp,
Swampert,
SwampertMega,
Poochyena,
Mightyena,
Zigzagoon,
ZigzagoonGalarian,
Linoone,
LinooneGalarian,
Wurmple,
Silcoon,
Beautifly,
Cascoon,
Dustox,
Lotad,
Lombre,
Ludicolo,
Seedot,
Nuzleaf,
Shiftry,
Taillow,
Swellow,
Wingull,
Pelipper,
Ralts,
Kirlia,
Gardevoir,
GardevoirMega,
Surskit,
Masquerain,
Shroomish,
Breloom,
Slakoth,
Vigoroth,
Slaking,
Nincada,
Ninjask,
Shedinja,
Whismur,
Loudred,
Exploud,
Makuhita,
Hariyama,
Azurill,
Nosepass,
Skitty,
Delcatty,
Sableye,
SableyeMega,
Mawile,
MawileMega,
Aron,
Lairon,
Aggron,
AggronMega,
Meditite,
Medicham,
MedichamMega,
Electrike,
Manectric,
ManectricMega,
Plusle,
Minun,
Volbeat,
Illumise,
Roselia,
Gulpin,
Swalot,
Carvanha,
Sharpedo,
SharpedoMega,
Wailmer,
Wailord,
Numel,
Camerupt,
CameruptMega,
Torkoal,
Spoink,
Grumpig,
Spinda,
Trapinch,
Vibrava,
Flygon,
Cacnea,
Cacturne,
Swablu,
Altaria,
AltariaMega,
Zangoose,
Seviper,
Lunatone,
Solrock,
Barboach,
Whiscash,
Corphish,
Crawdaunt,
Baltoy,
Claydol,
Lileep,
Cradily,
Anorith,
Armaldo,
Feebas,
Milotic,
Castform,
Kecleon,
Shuppet,
Banette,
BanetteMega,
Duskull,
Dusclops,
Tropius,
Chimecho,
Absol,
AbsolMega,
Wynaut,
Snorunt,
Glalie,
GlalieMega,
Spheal,
Sealeo,
Walrein,
Clamperl,
Huntail,
Gorebyss,
Relicanth,
Luvdisc,
Bagon,
Shelgon,
Salamence,
SalamenceMega,
Beldum,
Metang,
Metagross,
MetagrossMega,
Regirock,
Regice,
Registeel,
Latias,
LatiasMega,
Latios,
LatiosMega,
Kyogre,
KyogrePrimal,
Groudon,
GroudonPrimal,
Rayquaza,
RayquazaMega,
Jirachi,
Deoxys,
Turtwig,
Grotle,
Torterra,
Chimchar,
Monferno,
Infernape,
Piplup,
Prinplup,
Empoleon,
Starly,
Staravia,
Staraptor,
Bidoof,
Bibarel,
Kricketot,
Kricketune,
Shinx,
Luxio,
Luxray,
Budew,
Roserade,
Cranidos,
Rampardos,
Shieldon,
Bastiodon,
Burmy,
Wormadam,
Mothim,
Combee,
Vespiquen,
Pachirisu,
Buizel,
Floatzel,
Cherubi,
Cherrim,
Shellos,
Gastrodon,
Ambipom,
Drifloon,
Drifblim,
Buneary,
Lopunny,
Mismagius,
Honchkrow,
Glameow,
Purugly,
Chingling,
Stunky,
Skuntank,
Bronzor,
Bronzong,
Bonsly,
MimeJr,
Happiny,
Chatot,
Spiritomb,
Gible,
Gabite,
Garchomp,
GarchompMega,
Munchlax,
Riolu,
Lucario,
LucarioMega,
Hippopotas,
Hippowdon,
Skorupi,
Drapion,
Croagunk,
Toxicroak,
Carnivine,
Finneon,
Lumineon,
Mantyke,
Snover,
Abomasnow,
AbomasnowMega,
Weavile,
Magnezone,
Lickilicky,
Rhyperior,
Tangrowth,
Electivire,
Magmortar,
Togekiss,
Yanmega,
Leafeon,
Glaceon,
Gliscor,
Mamoswine,
PorygonZ,
Gallade,
GalladeMega,
Probopass,
Dusknoir,
Froslass,
Rotom,
Uxie,
Mesprit,
Azelf,
Dialga,
DialgaOrigin,
Palkia,
PalkiaOrigin,
Heatran,
Regigigas,
Giratina,
GiratinaOrigin,
Cresselia,
Phione,
Manaphy,
Darkrai,
Shaymin,
ShayminSky,
Arceus,
Victini,
Snivy,
Servine,
Serperior,
Tepig,
Pignite,
Emboar,
Oshawott,
Dewott,
Samurott,
SamurottHisuian,
Patrat,
Watchog,
Lillipup,
Herdier,
Stoutland,
Purrloin,
Liepard,
Pansage,
Simisage,
Pansear,
Simisear,
Panpour,
Simipour,
Munna,
Musharna,
Pidove,
Tranquill,
Unfezant,
Blitzle,
Zebstrika,
Roggenrola,
Boldore,
Gigalith,
Woobat,
Swoobat,
Drilbur,
Excadrill,
Audino,
AudinoMega,
Timburr,
Gurdurr,
Conkeldurr,
Tympole,
Palpitoad,
Seismitoad,
Throh,
Sawk,
Sewaddle,
Swadloon,
Leavanny,
Venipede,
Whirlipede,
Scolipede,
Cottonee,
Whimsicott,
Petilil,
Lilligant,
LilligantHisuian,
Basculin,
Sandile,
Krokorok,
Krookodile,
Darumaka,
DarumakaGalarian,
Darmanitan,
DarmanitanGalarian,
Maractus,
Dwebble,
Crustle,
Scraggy,
Scrafty,
Sigilyph,
Yamask,
YamaskGalarian,
Cofagrigus,
Tirtouga,
Carracosta,
Archen,
Archeops,
Trubbish,
Garbodor,
Zorua,
ZoruaHisuian,
Zoroark,
ZoroarkHisuian,
Minccino,
Cinccino,
Gothita,
Gothorita,
Gothitelle,
Solosis,
Duosion,
Reuniclus,
Ducklett,
Swanna,
Vanillite,
Vanillish,
Vanilluxe,
Deerling,
Sawsbuck,
Emolga,
Karrablast,
Escavalier,
Foongus,
Amoonguss,
Frillish,
Jellicent,
Alomomola,
Joltik,
Galvantula,
Ferroseed,
Ferrothorn,
Klink,
Klang,
Klinklang,
Tynamo,
Eelektrik,
Eelektross,
Elgyem,
Beheeyem,
Litwick,
Lampent,
Chandelure,
Axew,
Fraxure,
Haxorus,
Cubchoo,
Beartic,
Cryogonal,
Shelmet,
Accelgor,
Stunfisk,
StunfiskGalarian,
Mienfoo,
Mienshao,
Druddigon,
Golett,
Golurk,
Pawniard,
Bisharp,
Bouffalant,
Rufflet,
Braviary,
BraviaryHisuian,
Vullaby,
Mandibuzz,
Heatmor,
Durant,
Deino,
Zweilous,
Hydreigon,
Larvesta,
Volcarona,
Cobalion,
Terrakion,
Virizion,
Tornadus,
TornadusTherian,
Thundurus,
ThundurusTherian,
Reshiram,
Zekrom,
Landorus,
LandorusTherian,
Kyurem,
Keldeo,
KeldeoResolute,
Meloetta,
Genesect,
Chespin,
Quilladin,
Chesnaught,
Fennekin,
Braixen,
Delphox,
Froakie,
Frogadier,
Greninja,
Bunnelby,
Diggersby,
Fletchling,
Fletchinder,
Talonflame,
Scatterbug,
Spewpa,
Vivillon,
Litleo,
Pyroar,
Flabebe,
Floette,
Florges,
Skiddo,
Gogoat,
Pancham,
Pangoro,
Furfrou,
Espurr,
Meowstic,
MeowsticFemale,
Honedge,
Doublade,
Aegislash,
Spritzee,
Aromatisse,
Swirlix,
Slurpuff,
Inkay,
Malamar,
Binacle,
Barbaracle,
Skrelp,
Dragalge,
Clauncher,
Clawitzer,
Helioptile,
Heliolisk,
Tyrunt,
Tyrantrum,
Amaura,
Aurorus,
Sylveon,
Hawlucha,
Dedenne,
Carbink,
Goomy,
Sliggoo,
SliggooHisuian,
Goodra,
GoodraHisuian,
Klefki,
Phantump,
Trevenant,
Pumpkaboo,
Gourgeist,
Bergmite,
Avalugg,
AvaluggHisuian,
Noibat,
Noivern,
Xerneas,
Yveltal,
Zygarde,
Diancie,
DiancieMega,
Hoopa,
HoopaUnbound,
Volcanion,
Rowlet,
Dartrix,
Decidueye,
DecidueyeHisuian,
Litten,
Torracat,
Incineroar,
Popplio,
Brionne,
Primarina,
Pikipek,
Trumbeak,
Toucannon,
Yungoos,
Gumshoos,
Grubbin,
Charjabug,
Vikavolt,
Crabrawler,
Crabominable,
Oricorio,
Cutiefly,
Ribombee,
Rockruff,
Lycanroc,
LycanrocMidnight,
LycanrocDusk,
Wishiwashi,
Mareanie,
Toxapex,
Mudbray,
Mudsdale,
Dewpider,
Araquanid,
Fomantis,
Lurantis,
Morelull,
Shiinotic,
Salandit,
Salazzle,
Stufful,
Bewear,
Bounsweet,
Steenee,
Tsareena,
Comfey,
Oranguru,
Passimian,
Wimpod,
Golisopod,
Sandygast,
Palossand,
Pyukumuku,
TypeNull,
Silvally,
Minior,
Komala,
Turtonator,
Togedemaru,
Mimikyu,
Bruxish,
Drampa,
Dhelmise,
JangmoO,
HakamoO,
KommoO,
TapuKoko,
TapuLele,
TapuBulu,
TapuFini,
Cosmog,
Cosmoem,
Solgaleo,
Lunala,
Nihilego,
Buzzwole,
Pheromosa,
Xurkitree,
Celesteela,
Kartana,
Guzzlord,
Necrozma,
NecrozmaDuskMane,
NecrozmaDawnWings,
NecrozmaUltra,
Magearna,
Marshadow,
Poipole,
Naganadel,
Stakataka,
Blacephalon,
Zeraora,
Meltan,
Melmetal,
Grookey,
Thwackey,
Rillaboom,
Scorbunny,
Raboot,
Cinderace,
Sobble,
Drizzile,
Inteleon,
Skwovet,
Greedent,
Rookidee,
Corvisquire,
Corviknight,
Blipbug,
Dottler,
Orbeetle,
Nickit,
Thievul,
Gossifleur,
Eldegoss,
Wooloo,
Dubwool,
Chewtle,
Drednaw,
Tamper,
Boutund,
Rolycoly,
Charkol,
Colossal,
Applin,
Flapple,
Appletun,
Silicobra,
Sandaconda,
Cramorant,
Arrokuda,
Barraskewda,
Toxel,
Toxtricity,
Sizzlipede,
Centiskorch,
Clobbopus,
Grapploct,
Sinistea,
Polteageist,
Hatenna,
Hattrem,
Hatterene,
Impidimp,
Morgrem,
Grimmsnarl,
Obstagoon,
Perrserker,
Cursola,
Sirfetchd,
MrRime,
Runerigus,
Milcery,
Alcremie,
Falinks,
Pincurchin,
Snom,
Frosmoth,
Stonjourner,
Eiscue,
Indeedee,
Morpeko,
Cufant,
Copperajah,
Dracozolt,
Arctozolt,
Dracovish,
Arctovish,
Duraludon,
Dreepy,
Drakloak,
Dragapult,
Zacian,
Zamazenta,
Eternatus,
EternatusEternamax,
Kubfu,
Urshifu,
Zarude,
Regieleki,
Regidrago,
Glastrier,
Spectrier,
Calyrex,
CalyrexIceRider,
CalyrexShadowRider,
Wyrdeer,
Kleaver,
Ursaluna,
Basculegion,
Sneasler,
Overquil,
Enamorus,
EnamorusTherian,
Sprigatito,
Floragato,
Meowscarada,
Fuecoco,
Crocalor,
Skeledirge,
Quaxly,
Quaxwell,
Quaquaval,
Lechonk,
Oinkologne,
Tarountula,
Spidops,
Nymble,
Lokix,
Pawmi,
Pawmo,
Pawmot,
Tandemaus,
Maushold,
FIDOUGH,
DACHSBUN,
SMOLIV,
DOLLIV,
ARBOLIVA,
SQUAWKABILLY,
NACLI,
NACLSTACK,
GARGANACL,
CHARCADET,
ARMAROUGE,
CERULEDGE,
TADBULB,
BELLIBOLT,
WATTREL,
KILOWATTREL,
MASCHIFF,
MABOSSTIFF,
SHROODLE,
GRAFAIAI,
BRAMBLIN,
BRAMBLEGHAST,
TOEDSCOOL,
TOEDSCRUEL,
KLAWF,
CAPSAKID,
SCOVILLAIN,
RELLOR,
RABSCA,
FLITTLE,
ESPATHRA,
TINKATINK,
TINKATUFF,
TINKATON,
WIGLETT,
WUGTRIO,
BOMBIRDIER,
FINIZEN,
PALAFIN,
VAROOM,
REVAVROOM,
CYCLIZAR,
ORTHWORM,
GLIMMET,
GLIMMORA,
GREAVARD,
HOUNDSTONE,
FLAMIGO,
CETODDLE,
CETITAN,
VELUZA,
DONDOZO,
TATSUGIRI,
ANNIHILAPE,
CLODSIRE,
FARIGIRAF,
DUDUNSPARCE,
KINGAMBIT,
GREAT_TUSK,
SCREAM_TAIL,
BRUTE_BONNET,
FLUTTER_MANE,
SLITHER_WING,
SANDY_SHOCKS,
IRON_TREADS,
IRON_BUNDLE,
IRON_HANDS,
IRON_JUGULIS,
IRON_MOTH,
IRON_THORNS,
FRIGIBAX,
ARCTIBAX,
BAXCALIBUR,
GIMMIGHOUL,
GHOLDENGO,
WO_CHIEN,
CHIEN_PAO,
TING_LU,
CHI_YU,
ROARING_MOON,
IRON_VALIANT,
KORAIDON,
MIRAIDON,
WALKING_WAKE,
IRON_LEAVES,
DIPPLIN,
POLTCHAGEIST,
SINISTCHA,
OKIDOGI,
MUNKIDORI,
FEZANDIPITI,
OGERPON,
ARCHALUDON,
HYDRAPPLE,
GOUGING_FIRE,
RAGING_BOLT,
IRON_BOULDER,
IRON_CROWN,
TERAPAGOS,
PECHARUNT,
None
}

#[derive(Clone)]
pub struct PokemonStats{
    pub pokemon_id: Pokemon,
    pub pokemon_name: String,
    pub type1: Type,
    pub type2: Type,
    pub generation: i16,
    pub status: LegendStatus,
    pub min_level: i16,
    pub evolve_from: Pokemon,
    pub evolve_into: Vec<Pokemon>
}

#[derive(PartialEq)]
#[derive(Copy, Clone)]
pub enum Type{
    Normal,
    Fighting,
    Flying,
    Poison,
    Ground,
    Rock,
    Bug,
    Ghost,
    Steel,
    Fire,
    Water,
    Grass,
    Electric,
    Psychic,
    Ice,
    Dragon,
    Dark,
    Fairy,
    Stellar,
    None
}
#[derive(PartialEq)]
#[derive(Copy, Clone)]
pub enum LegendStatus{
    Standard,
    Legendary,
    Mythical,
    Mega,
    LegendMega,
}

pub fn format_pokemon_name(pkmn_name: String) -> String{
    return format!("SPECIES_{}",pkmn_name.to_uppercase());
}
pub fn get_pokemon_data(pokemon: Pokemon, all_stats: &Vec<PokemonStats>) -> PokemonStats{
    all_stats[pokemon as usize].clone()
}
pub fn pokemon_to_formatted_name(pkmn: Pokemon,all_stats: &Vec<PokemonStats>) -> String{
    return format_pokemon_name(get_pokemon_data(pkmn,all_stats).pokemon_name);
}
pub fn get_pokemon_data_integer(pokemon: i32,all_stats: &Vec<PokemonStats>) -> PokemonStats{
    all_stats[pokemon as usize].clone()
}
pub fn get_pokemon_from_name(pokemon_name: String,all_stats: &Vec<PokemonStats>) -> Pokemon{
    //println!("get pokemon_{}_",pokemon_name);
    if pokemon_name == ""{
        return Pokemon::None;
    }
    for i in 0..all_stats.len() {
        if all_stats[i].pokemon_name == pokemon_name{
            return all_stats[i].pokemon_id;
        }
        if format_pokemon_name(all_stats[i].pokemon_name.clone()) == pokemon_name{
            return  all_stats[i].pokemon_id;
        }
    }
    return Pokemon::None;
}
pub fn read_all_pokemon() -> Vec<PokemonStats>{
    let csv: String = fs::read_to_string("data/emerald/pokemon.csv").unwrap();
    let mut reader = csv::Reader::from_reader(csv.as_bytes());
    let mut all_stats: Vec<PokemonStats> = Vec::new();
    let mut cur_num = 0;
    let mut evolveinto: Vec<Vec<String>> = Vec::new(); //Dumb workaround because we don't have all the pokemon loaded at first, and we need a complete pokedex before adding "Evolve intos"
    for cur_pokemon in reader.records(){
        if cur_num == Pokemon::None as i32{
            println!("End of file");
            break;
        }
        let cur_pokemon = cur_pokemon.unwrap();
        let min_level_string = cur_pokemon[5].to_string();
        let min_level = if min_level_string == "Other".to_string() || min_level_string == "Mega".to_string(){
            0
        }
        else{
            min_level_string.parse::<i16>().unwrap()
        };
        let mut next_evo = Vec::new();
        for i in 7..13{
            let next_pkmn = cur_pokemon[i].to_string();
            if next_pkmn == ""{
                break;
            }
            next_evo.push(next_pkmn);
        }
        evolveinto.push(next_evo);
        let add_pokemon = PokemonStats{
            pokemon_id: Pokemon::try_from(cur_num).unwrap(),
            pokemon_name: cur_pokemon[0].to_string(),
            type1: string_to_type(cur_pokemon[1].to_string()),
            type2: string_to_type(cur_pokemon[2].to_string()),
            generation: cur_pokemon[3].to_string().parse::<i16>().unwrap(),
            status: string_to_legend_status(cur_pokemon[4].to_string()),
            min_level: min_level,
            evolve_from: get_pokemon_from_name(cur_pokemon[6].to_string(), &all_stats),
            evolve_into: vec![Pokemon::None]
        };
        all_stats.push(add_pokemon);
        cur_num += 1;
    }
    //Go back through vector (makes this algorithm O(2n) but whatever I don't care that much)
    for cur_pokemon_index in 0..evolveinto.len(){
        let mut next_evos:Vec<Pokemon> = Vec::new();
        for cur_pokemon_next in evolveinto[cur_pokemon_index].clone(){
            next_evos.push(get_pokemon_from_name(cur_pokemon_next, &all_stats))
        }
        all_stats[cur_pokemon_index].evolve_into = next_evos;
    }
    all_stats
}

fn string_to_type(pkmn_type: String) -> Type{
    match pkmn_type.as_str(){
        "Normal" => Type::Normal,
        "Fighting" => Type::Fighting,
        "Flying" => Type::Flying,
        "Poison" => Type::Poison,
        "Ground" => Type::Ground,
        "Rock" => Type::Rock,
        "Bug" => Type::Bug,
        "Ghost" => Type::Ghost,
        "Steel" => Type::Steel,
        "Fire" => Type::Fire,
        "Water" => Type::Water,
        "Grass" => Type::Grass,
        "Electric" => Type::Electric,
        "Psychic" => Type::Psychic,
        "Ice" => Type::Ice,
        "Dragon" => Type::Dragon,
        "Dark" => Type::Dark,
        "Fairy" => Type::Fairy,
        "Stellar" => Type::Stellar,
        _ => Type::None
    }
}
pub fn type_to_string(pkmn_type: Type) -> String{
    match pkmn_type{
         Type::Normal => "Normal",
         Type::Fighting => "Fighting",
         Type::Flying => "Flying",
         Type::Poison => "Poison",
         Type::Ground => "Ground",
         Type::Rock => "Rock",
         Type::Bug => "Bug",
         Type::Ghost => "Ghost",
         Type::Steel => "Steel",
         Type::Fire => "Fire",
         Type::Water => "Water",
         Type::Grass => "Grass",
         Type::Electric => "Electric",
         Type::Psychic => "Psychic",
         Type::Ice => "Ice",
         Type::Dragon => "Dragon",
         Type::Dark => "Dark",
         Type::Fairy => "Fairy",
         Type::Stellar => "Stellar",
        _ => "Normal"
    }.to_string()
}
fn string_to_legend_status(pkmn_stats: String) -> LegendStatus{
    match pkmn_stats.as_str(){
        "TRUE" => LegendStatus::Legendary,
        "FALSE" => LegendStatus::Standard,
        "MEGA" => LegendStatus::Mega,
        "LegendMega" => LegendStatus::LegendMega,
        _ => LegendStatus::Standard
    }
}